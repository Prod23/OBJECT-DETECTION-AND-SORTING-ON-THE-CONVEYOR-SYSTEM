# -*- coding: utf-8 -*-
"""YOLOv8_labels.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q1FgH_9iTgViZQf5HmzZlehgMO5M_532
"""

# Importing the necessary modules
import os
import cv2

# Defining the path to the folder that contains the images and labels
folder_path_labels = "datasets/labels"
folder_path_images = "datasets/images"

# Looping through all the files in the folder
for file in os.listdir(folder_path_images):
    # Checking if the file is an image file with JPG extension
    if file.endswith(".jpg"):
        # Getting the image ID from the file name
        image_id = file[:-4]
        # Constructing the path to the image file and the label file
        image_file = os.path.join(folder_path_images, file)
        label_file = os.path.join(folder_path_labels, image_id + ".txt")

        with open(label_file, "r") as f:
            labels = f.readlines()
        # Creating a new list to store the updated labels
        updated_labels = []
        # Looping through each label in the label file
        for label in labels:
            # Splitting the label by spaces
            label_parts = label.split()
            # Getting the category name, bounding box coordinates, and segmentation points
            category_id = label_parts[0]
            x_min = label_parts[1]
            y_min = label_parts[2]
            x_max = label_parts[3]
            y_max = label_parts[4]
            new_category_id = ""
            # Converting the category ID
            if(category_id == "Box"):
              new_category_id = "1"
            if category_id == "Bottle":
              new_category_id = "0"
            # Joining the updated label parts by spaces
            updated_label = " ".join([new_category_id, x_min, y_min, x_max, y_max]) + "\n"
            print(updated_label)
            # Appending the updated label to the updated labels list
            updated_labels.append(updated_label)
            # Printing a success message
        # Writing the updated labels to a new label file with a prefix of "updated_"
        with open(label_file, "w") as f:
            f.writelines(updated_labels)

print("All the label files have been updated successfully.")